{"version":3,"file":"static/js/76.e05128e2.chunk.js","mappings":"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","sources":["api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'b62621a55fc4b114d29794b8b2ba9e8c';\n\nexport const fetchTrendingList = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  const { results } = response.data;\n  return results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { cast } = response.data;\n  return cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { results } = response.data;\n  return results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_item\":\"Cast_cast_item__SSip9\",\"message\":\"Cast_message__X53aY\"};","import { fetchMovieCast } from 'api';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [castMovie, setCastMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function getCast() {\n      try {\n        setLoading(true);\n        const fetchedCast = await fetchMovieCast(movieId);\n        setCastMovie(fetchedCast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getCast();\n  }, [movieId]);\n\n  const defaultImage =\n    'https://via.placeholder.com/250x375.png?text=Image+Not+Found';\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && (\n        <h2>'Oops! Something went wrong! Please try reloading this page!'</h2>\n      )}\n\n      <ul className={css.cast_list}>\n        {castMovie.length > 0 ? (\n          castMovie.map(({ profile_path, name, character, id }) => (\n            <li key={id} className={css.cast_item}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImage\n                }\n                alt={name}\n                width={250}\n                height={375}\n              />\n              <p>{name}</p>\n              <p>{`Character: ${character}`}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any information about the actors.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","fetchTrendingList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","results","_context","prev","next","concat","sent","data","abrupt","stop","apply","arguments","fetchMoviesBySearch","_ref2","_callee2","query","_context2","_x","fetchMovieById","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","cast","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","useParams","_useState","useState","_useState2","_slicedToArray","castMovie","setCastMovie","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","_getCast","fetchedCast","t0","finish","getCast","_jsxs","children","_jsx","Loader","className","css","length","map","profile_path","name","character","id","src","alt","width","height"],"sourceRoot":""}